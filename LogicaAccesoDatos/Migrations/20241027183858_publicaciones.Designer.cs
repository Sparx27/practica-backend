// <auto-generated />
using System;
using System.Collections.Generic;
using LogicaAccesoDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(LibreriaDBv3Context))]
    [Migration("20241027183858_publicaciones")]
    partial class publicaciones
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutorPublicacion", b =>
                {
                    b.Property<int>("AutoresId")
                        .HasColumnType("int");

                    b.Property<int>("PublicacionesId")
                        .HasColumnType("int");

                    b.HasKey("AutoresId", "PublicacionesId");

                    b.HasIndex("PublicacionesId");

                    b.ToTable("AutorPublicacion");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FchNacimiento")
                        .HasColumnType("date");

                    b.Property<int>("Nacionalidad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nacionalidad");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Editorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.HasIndex("PaisId");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Paises", (string)null);
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Publicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EditorialId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FchPublicacion")
                        .HasColumnType("date");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.ComplexProperty<Dictionary<string, object>>("Nombre", "LogicaNegocio.Entidades.Publicacion.Nombre#RNombrePublicacion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("Id");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("AutorPublicacion", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Autor", null)
                        .WithMany()
                        .HasForeignKey("AutoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Entidades.Publicacion", null)
                        .WithMany()
                        .HasForeignKey("PublicacionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Autor", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("Nacionalidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.RNombreAutor", "Nombre", b1 =>
                        {
                            b1.Property<int>("AutorId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("AutorId");

                            b1.HasIndex("Valor")
                                .IsUnique();

                            b1.ToTable("Autores");

                            b1.WithOwner()
                                .HasForeignKey("AutorId");
                        });

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Editorial", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Pais", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObjects.RNombrePais", "Nombre", b1 =>
                        {
                            b1.Property<int>("PaisId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("Nombre");

                            b1.HasKey("PaisId");

                            b1.HasIndex("Valor")
                                .IsUnique();

                            b1.ToTable("Paises");

                            b1.WithOwner()
                                .HasForeignKey("PaisId");
                        });

                    b.Navigation("Nombre")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
